name: Build and Deploy to Production

on:
  push:
    branches:
      - main
      - v1
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.145.0'
          extended: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install wrangler
        run: npm install -g wrangler

      - name: Build combined site
        run: |
          ./scripts/build-combined.sh --type production --output final_dist

      - name: Create Cloudflare Worker
        run: |
          cat > worker.js << 'EOF'
          export default {
            async fetch(request, env, ctx) {
              const url = new URL(request.url);
              
              // Handle root redirect
              if (url.pathname === '/' || url.pathname === '/docs') {
                return Response.redirect(url.origin + '/docs/byoc/', 301);
              }
              
              // Handle docs routing
              if (url.pathname.startsWith('/docs/')) {
                // Extract path components
                const pathParts = url.pathname.split('/').filter(Boolean);
                
                if (pathParts.length >= 2) {
                  // Check if this looks like a version path (v1, v2, etc.)
                  const possibleVersion = pathParts[1];
                  const isVersionPath = /^v\d+$/.test(possibleVersion);
                  
                  if (!isVersionPath) {
                    // No version specified, default to v2 (latest)
                    const newPath = '/docs/v2/' + pathParts.slice(1).join('/');
                    return Response.redirect(url.origin + newPath, 301);
                  }
                }
              }
              
              // Pass through to static assets
              return env.ASSETS.fetch(request);
            }
          };
          EOF

      - name: Create wrangler config
        run: |
          cat > wrangler.toml << 'EOF'
          name = "unionai-docs"
          main = "worker.js"
          compatibility_date = "2024-01-01"
          
          [site]
          bucket = "./final_dist"
          EOF

      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          wrangler pages deploy final_dist --project-name=unionai-docs --compatibility-date=2024-01-01

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build-${{ steps.versions.outputs.current_version }}-${{ github.sha }}
          path: final_dist/
          retention-days: 30